<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="BtnAddDir" xml:space="preserve">
    <value>Add Folder</value>
  </data>
  <data name="BtnAddFile" xml:space="preserve">
    <value>Add File</value>
  </data>
  <data name="BtnAddQuestion" xml:space="preserve">
    <value>Add Question</value>
  </data>
  <data name="BtnDecrypt" xml:space="preserve">
    <value>Decrypt</value>
  </data>
  <data name="BtnEncrypt" xml:space="preserve">
    <value>Encrypt</value>
  </data>
  <data name="BtnRemove" xml:space="preserve">
    <value>Remove</value>
  </data>
  <data name="BtnSelect" xml:space="preserve">
    <value>Select</value>
  </data>
  <data name="BtnSelectFile" xml:space="preserve">
    <value>Select File</value>
  </data>
  <data name="ChkCreateDir" xml:space="preserve">
    <value>Create a folder and expand.</value>
  </data>
  <data name="ChkDecompressDesktop" xml:space="preserve">
    <value>Expand to desktop.</value>
  </data>
  <data name="ChkIgnoreCase" xml:space="preserve">
    <value>Ignore case.</value>
  </data>
  <data name="ChkIgnoreHiraKata" xml:space="preserve">
    <value>(ja)Ignore Hiragana and Katakana.</value>
  </data>
  <data name="ChkIgnoreZenHan" xml:space="preserve">
    <value>(ja)Ignore Zenkaku and Hankaku.</value>
  </data>
  <data name="ChkNoCompress" xml:space="preserve">
    <value>To create an archive without compression.</value>
  </data>
  <data name="ChkRemoveSpace" xml:space="preserve">
    <value>Ignore whitespace in password.</value>
  </data>
  <data name="ChkTrim" xml:space="preserve">
    <value>Remove whitespace before and after password.</value>
  </data>
  <data name="CmbNumRequiredPasswords" xml:space="preserve">
    <value>or more passwords are required for decryption.</value>
  </data>
  <data name="LblOutputDir" xml:space="preserve">
    <value>Output Dir:</value>
  </data>
  <data name="LblOutputFile" xml:space="preserve">
    <value>Output File:</value>
  </data>
  <data name="LblTargetFile" xml:space="preserve">
    <value>Target File:</value>
  </data>
  <data name="MsgCDeleteQuestion" xml:space="preserve">
    <value>Delete question {0}.</value>
  </data>
  <data name="MsgCEncryptOnlyExistFile" xml:space="preserve">
    <value>Encrypt with existing files only?</value>
  </data>
  <data name="MsgCOverwriteOutputFile" xml:space="preserve">
    <value>The output file exists. Do you want to overwrite?</value>
  </data>
  <data name="MsgCStartEncryption" xml:space="preserve">
    <value>Start encryption.</value>
  </data>
  <data name="MsgEFailCreateFile" xml:space="preserve">
    <value>Failed to create the output file.\n\nDetailed information:</value>
  </data>
  <data name="MsgEFailEncryption" xml:space="preserve">
    <value>Encryption failed.\n\nDetailed information:</value>
  </data>
  <data name="MsgEOutputNotSpecified" xml:space="preserve">
    <value>Output file is not specified.</value>
  </data>
  <data name="MsgERemoveLastQuestion" xml:space="preserve">
    <value>Only one Question can not be deleted.</value>
  </data>
  <data name="MsgETargetDuplicated" xml:space="preserve">
    <value>Encryption is impossible due to duplicate file name or folder name.</value>
  </data>
  <data name="MsgETargetNotExisted" xml:space="preserve">
    <value>There is no file to encrypt.</value>
  </data>
  <data name="MsgETargetNotMPE" xml:space="preserve">
    <value>The specified file is not a Multiple Passwords Encrypted file.\n\nDetailed information:</value>
  </data>
  <data name="MsgETargetNotSpecified" xml:space="preserve">
    <value>Encryption target file is not specified.</value>
  </data>
  <data name="MsgIEndDecryption" xml:space="preserve">
    <value>Decryption is complete.</value>
  </data>
  <data name="MsgIEndEncryption" xml:space="preserve">
    <value>Encryption is complete.</value>
  </data>
  <data name="MsgIPasswordIncorrect" xml:space="preserve">
    <value>Password is incorrect.</value>
  </data>
  <data name="MsgIRemoveNoTargetItem" xml:space="preserve">
    <value>Excludes the selected file or folder from subject to encryption.</value>
  </data>
  <data name="MsgWDummyQuestion" xml:space="preserve">
    <value>A Question without a password is a dummy Question.</value>
  </data>
  <data name="MsgWFileNotExisted" xml:space="preserve">
    <value>The following file does not exist.</value>
  </data>
  <data name="MsgWMPEInvalidFormat" xml:space="preserve">
    <value>The specified file may not be decrypted properly.\n\nDetailed information:</value>
  </data>
  <data name="MsgWUndecrytableArchive" xml:space="preserve">
    <value>Because it is less than the number of passwords required for decryption, an archive that can not be decrypted is created.</value>
  </data>
  <data name="TabDecrypt" xml:space="preserve">
    <value>Decrypt</value>
  </data>
  <data name="TabEncrypt" xml:space="preserve">
    <value>Encrypt</value>
  </data>
</root>